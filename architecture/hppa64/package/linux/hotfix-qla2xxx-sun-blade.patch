# --- T2-COPYRIGHT-NOTE-BEGIN ---
# T2 SDE: package/*/linux/hotfix-qla2xxx-sun-blade.patch
# Copyright (C) 2023 The T2 SDE Project
# 
# This Copyright note is generated by scripts/Create-CopyPatch,
# more information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License version 2 as used by the T2 SDE.
# --- T2-COPYRIGHT-NOTE-END ---

fix:
qla2xxx [0001:00:04.0]-5030:1: Error entry - invalid handle/queue (0001).
qla2xxx [0001:00:04.0]-5032:1: ERROR-IOCB: Invalid completion handle (0) -- timed-out.

and:
qla2xxx [0001:00:04.0]-5046:1: Async-logout failed - hdl=2 portid=0000e8 status=30 mb0=4006 mb1=1 mb2=0 mb6=0 mb7

diff --git a/drivers/scsi/qla2xxx/qla_init.c b/drivers/scsi/qla2xxx/qla_init.c
index 3f3417a3e891..c4dda4f8a8df 100644
--- a/drivers/scsi/qla2xxx/qla_init.c
+++ b/drivers/scsi/qla2xxx/qla_init.c
@@ -2248,7 +2248,12 @@ qla24xx_handle_plogi_done_event(struct scsi_qla_host *vha, struct event_arg *ea)
 		ql_dbg(ql_dbg_disc, vha, 0x20eb, "%s %d %8phC cmd error %x\n",
 		    __func__, __LINE__, ea->fcport->port_name, ea->data[1]);
 
-		qlt_schedule_sess_for_deletion(ea->fcport);
+		ea->fcport->flags &= ~FCF_ASYNC_SENT;
+		qla2x00_set_fcport_disc_state(ea->fcport, DSC_LOGIN_FAILED);
+		if (ea->data[1] & QLA_LOGIO_LOGIN_RETRIED)
+			set_bit(RELOGIN_NEEDED, &vha->dpc_flags);
+		else
+			qla2x00_mark_device_lost(vha, ea->fcport, 1);
 		break;
 	case MBS_LOOP_ID_USED:
 		/* data[1] = IO PARAM 1 = nport ID  */
diff --git a/drivers/scsi/qla2xxx/qla_mbx.c b/drivers/scsi/qla2xxx/qla_mbx.c
index 9a3f832c49ef..643fa0052f5a 100644
--- a/drivers/scsi/qla2xxx/qla_mbx.c
+++ b/drivers/scsi/qla2xxx/qla_mbx.c
@@ -238,8 +238,6 @@ qla2x00_mailbox_command(scsi_qla_host_t *vha, mbx_cmd_t *mcp)
 			ql_dbg(ql_dbg_mbx, vha, 0x1112,
 			    "mbox[%d]<-0x%04x\n", cnt, *iptr);
 			wrt_reg_word(optr, *iptr);
-		} else {
-			wrt_reg_word(optr, 0);
 		}
 
 		mboxes >>= 1;
