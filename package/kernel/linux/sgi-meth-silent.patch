# --- T2-COPYRIGHT-NOTE-BEGIN ---
# T2 SDE: package/*/linux/sgi-meth-silent.patch
# Copyright (C) 2024 The T2 SDE Project
# 
# This Copyright note is generated by scripts/Create-CopyPatch,
# more information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License version 2 as used by the T2 SDE.
# --- T2-COPYRIGHT-NOTE-END ---

IMHO a constant high load flow of:

[ 6412.073755] meth: error status: 0x043b0360
[ 6412.107642] meth: Rx underflow

is a bit too noisy as default for production use.

--- linux-6.6/drivers/net/ethernet/sgi/meth.c.vanilla	2024-01-06 21:03:39.406526302 +0100
+++ linux-6.6/drivers/net/ethernet/sgi/meth.c	2024-01-06 21:07:32.591552068 +0100
@@ -541,7 +541,7 @@
 	struct meth_private *priv = netdev_priv(dev);
 	unsigned long flags;
 
-	printk(KERN_WARNING "meth: error status: 0x%08x\n",status);
+	DPRINTK("meth: error status: 0x%08x\n",status);
 	/* check for errors too... */
 	if (status & (METH_INT_TX_LINK_FAIL))
 		printk(KERN_WARNING "meth: link failure\n");
@@ -553,7 +553,7 @@
 	if (status & (METH_INT_RX_OVERFLOW))
 		printk(KERN_WARNING "meth: Rx overflow\n");
 	if (status & (METH_INT_RX_UNDERFLOW)) {
-		printk(KERN_WARNING "meth: Rx underflow\n");
+		DPRINTK("meth: Rx underflow\n");
 		spin_lock_irqsave(&priv->meth_lock, flags);
 		mace->eth.int_stat = METH_INT_RX_UNDERFLOW;
 		/* more underflow interrupts will be delivered,
