# --- T2-COPYRIGHT-NOTE-BEGIN ---
# T2 SDE: package/*/reiserfsprogs/hotfix.patch.musl
# Copyright (C) 2023 The T2 SDE Project
# 
# This Copyright note is generated by scripts/Create-CopyPatch,
# more information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License version 2 as used by the T2 SDE.
# --- T2-COPYRIGHT-NOTE-END ---

This disables huge parts of the glibc specific printf register trickery.

--- reiserfsprogs-3.6.27/include/misc.h.vanilla	2023-12-16 15:33:53.343749518 +0100
+++ reiserfsprogs-3.6.27/include/misc.h	2023-12-16 15:36:14.649743486 +0100
@@ -33,6 +33,11 @@
 #   include <sys/sysmacros.h>
 #endif
 
+typedef off_t loff_t;
+
+typedef int (*__compar_fn_t) (const void *, const void *);
+typedef __compar_fn_t comparison_fn_t;
+
 #include "swab.h"
 
 #define POSITION_FOUND          8
--- reiserfsprogs-3.6.27/include/reiserfs_lib.h.vanilla	2023-12-16 15:40:00.339733852 +0100
+++ reiserfsprogs-3.6.27/include/reiserfs_lib.h	2023-12-16 15:40:09.663733454 +0100
@@ -14,6 +14,8 @@
 #include <com_err.h>
 #include "reiserfs_fs.h"
 
+typedef off_t loff_t;
+
 struct _bitmap {
 	unsigned long bm_byte_size;
 	unsigned long bm_bit_size;
--- reiserfsprogs-3.6.27/reiserfscore/prints.c.vanilla	2023-12-16 15:36:33.013742702 +0100
+++ reiserfsprogs-3.6.27/reiserfscore/prints.c	2023-12-16 15:40:57.014731432 +0100
@@ -8,7 +8,7 @@
 #include "includes.h"
 #include <stdarg.h>
 #include <limits.h>
-#include <printf.h>
+//#include <printf.h>
 #include <limits.h>
 #include <time.h>
 
@@ -16,6 +16,8 @@
 #  include <uuid/uuid.h>
 #endif
 
+#if 0
+
 #ifndef HAVE_REGISTER_PRINTF_SPECIFIER
 #define register_printf_specifier(x, y, z) register_printf_function(x, y, z)
 static int arginfo_ptr(const struct printf_info *info, size_t n, int *argtypes)
@@ -129,6 +131,8 @@
 	FPRINTF;
 }
 
+#endif
+
 char ftypelet(mode_t mode)
 {
 	if (S_ISBLK(mode))
@@ -148,6 +152,7 @@
 	return '?';
 }
 
+#if 0
 static int rwx(FILE * stream, mode_t mode)
 {
 	return fprintf(stream, "%c%c%c",
@@ -189,6 +194,8 @@
 #endif
 }
 
+#endif
+
 void reiserfs_warning(FILE * fp, const char *fmt, ...)
 {
 	static int registered = 0;
@@ -196,7 +203,7 @@
 
 	if (!registered) {
 		registered = 1;
-
+/*
 		register_printf_specifier('K', print_short_key, arginfo_ptr);
 		register_printf_specifier('k', print_key, arginfo_ptr);
 		register_printf_specifier('H', print_item_head, arginfo_ptr);
@@ -204,6 +211,7 @@
 		register_printf_specifier('y', print_disk_child, arginfo_ptr);
 		register_printf_specifier('M', print_sd_mode, arginfo_ptr);
 		register_printf_specifier('U', print_sd_uuid, arginfo_ptr);
+*/
 	}
 
 	va_start(args, fmt);
--- reiserfsprogs-3.6.27/Makefile.in.vanilla	2023-12-16 15:41:26.584730170 +0100
+++ reiserfsprogs-3.6.27/Makefile.in	2023-12-16 15:41:30.309730011 +0100
@@ -319,7 +319,7 @@
 top_build_prefix = @top_build_prefix@
 top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
-SUBDIRS = include lib reiserfscore fsck debugreiserfs resize_reiserfs mkreiserfs tune
+SUBDIRS = include lib reiserfscore fsck resize_reiserfs mkreiserfs tune
 EXTRA_DIST = CREDITS version.h reiserfsprogs.spec
 all: all-recursive
 
